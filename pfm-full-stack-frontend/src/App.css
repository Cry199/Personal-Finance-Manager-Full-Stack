/* Exemplo de estilos para o container do formulário de login */
.form-container {
  background-color: var(--surface-color);
  padding: 2rem;
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  border: 1px solid var(--border-color);
  width: 100%;
  max-width: 400px;
  margin: 2rem auto;
  transition: background-color 0.3s ease, border-color 0.3s ease;
}

.form-container h2 {
  text-align: center;
  margin-bottom: 1.5rem;
  color: var(--primary-text-color);
}

/* Estilos para os inputs e botões */
.input-field {
  width: 100%;
  padding: 10px;
  margin-top: 5px;
  margin-bottom: 15px;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  background-color: var(--background-color);
  color: var(--primary-text-color);
  box-sizing: border-box; /* Garante que o padding não aumenta a largura total */
}

.primary-button {
  width: 100%;
  padding: 12px;
  border: none;
  border-radius: 4px;
  background-color: var(--primary-color);
  color: var(--button-text-color);
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.2s ease;
}

.primary-button:hover {
  opacity: 0.9;
}

.main-layout {
  width: 100%;
}

.navbar {
  width: 100%;
  background-color: var(--surface-color);
  border-bottom: 1px solid var(--border-color);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  padding: 0 2rem; /* padding horizontal */
  box-sizing: border-box;
}

body.dark-mode .navbar {
    box-shadow: 0 2px 4px rgba(255, 255, 255, 0.05);
}

.navbar-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
  max-width: 1200px;
  margin: 0 auto;
  height: 64px;
}

.nav-brand {
  font-size: 1.5rem;
  font-weight: bold;
  color: var(--primary-text-color);
  text-decoration: none;
}

.nav-links {
  display: flex;
  gap: 1rem;
}

.nav-link {
  text-decoration: none;
  color: var(--secondary-text-color);
  padding: 8px 12px;
  border-radius: 6px;
  transition: background-color 0.2s, color 0.2s;
}

.nav-link:hover {
  color: var(--primary-text-color);
  background-color: rgba(0, 0, 0, 0.05);
}

body.dark-mode .nav-link:hover {
    background-color: rgba(255, 255, 255, 0.1);
}

/* Estilo para o link ativo */
.nav-link.active {
  color: var(--primary-color);
  font-weight: 500;
}

.main-content {
  max-width: 1200px;
  margin: 2rem auto;
  padding: 0 2rem;
}

Claro! Com o layout principal e a navegação já estilizados com o seu CSS personalizado, a aplicação já tem uma cara muito mais profissional.

O próximo passo lógico é aplicar um estilo consistente ao conteúdo principal das páginas, especialmente aos elementos que mais se repetem, como as tabelas e os cartões de conteúdo.

Vamos criar um conjunto de classes genéricas para estes elementos e aplicá-las à página de Transações como nosso principal exemplo.

Próximos Passos: Estilizar as Tabelas e Conteúdo das Páginas
1. Adicionar Estilos Genéricos para Cartões e Tabelas ao App.css
Vamos adicionar classes ao App.css que poderemos reutilizar em todas as páginas que mostram dados.

Ficheiro: src/App.css (adicione este código ao final do ficheiro)

CSS

/* Estilo para o 'cartão' que envolve o conteúdo da página */
.content-card {
  background-color: var(--surface-color);
  padding: 1.5rem;
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
  border: 1px solid var(--border-color);
  transition: background-color 0.3s ease, border-color 0.3s ease;
}

.page-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid var(--border-color);
}

.page-header h2 {
  font-size: 1.5rem;
  font-weight: bold;
}

/* Estilos genéricos para tabelas */
.custom-table {
  width: 100%;
  border-collapse: collapse; /* Remove o espaço entre as células */
}

.custom-table thead {
  background-color: var(--background-color);
}

.custom-table th, .custom-table td {
  padding: 12px 15px;
  text-align: left;
  border-bottom: 1px solid var(--border-color);
}

.custom-table th {
  font-size: 0.8rem;
  text-transform: uppercase;
  color: var(--secondary-text-color);
  letter-spacing: 0.05em;
}

.custom-table tbody tr {
  transition: background-color 0.2s ease;
}

.custom-table tbody tr:hover {
  background-color: rgba(0, 0, 0, 0.02);
}

body.dark-mode .custom-table tbody tr:hover {
  background-color: rgba(255, 255, 255, 0.05);
}

.actions-cell {
  display: flex;
  gap: 1rem;
  justify-content: flex-end;
}

.actions-cell button {
  background: none;
  border: none;
  cursor: pointer;
  font-weight: 500;
  padding: 0;
}

.edit-button {
  color: var(--primary-color);
}

.delete-button {
  color: var(--error-color);
}

Com o layout principal e as tabelas já estilizados, a sua aplicação está a ganhar uma identidade visual forte e consistente. O próximo passo é levar essa consistência para os elementos interativos mais importantes: os formulários e a janela modal onde eles aparecem.

Vamos finalizar o design base da aplicação, garantindo que a experiência de adicionar ou editar dados seja tão limpa e profissional quanto a de visualizá-los.

Próximos Passos: Estilizar o Modal e os Formulários
1. Adicionar Estilos para o Modal e Formulários ao App.css
Vamos criar as classes necessárias para o nosso pop-up (modal) e refinar os estilos dos campos do formulário.

Ficheiro: src/App.css (adicione este código ao final do ficheiro)

CSS

/* Estilos para o Modal */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.6);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.modal-content {
  background-color: var(--surface-color);
  padding: 2rem;
  border-radius: 8px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  border: 1px solid var(--border-color);
  width: 100%;
  max-width: 500px;
  position: relative;
}

.close-button {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  color: var(--secondary-text-color);
}

/* Estilos para o formulário dentro do modal */
.modal-form h3 {
  margin-top: 0;
  margin-bottom: 1.5rem;
  font-size: 1.25rem;
}

.form-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
}

.form-field {
  margin-bottom: 1rem;
}

.form-field label {
  display: block;
  margin-bottom: 0.5rem;
  font-size: 0.9rem;
  color: var(--secondary-text-color);
}

.form-actions {
  display: flex;
  justify-content: flex-end;
  gap: 0.5rem;
  margin-top: 1.5rem;
}

.secondary-button {
  padding: 10px 20px;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  background-color: transparent;
  color: var(--primary-text-color);
  cursor: pointer;
}